version: '3.3'
services:
  db:
    container_name: foodgram-db
    image: postgres:16
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file: ./.env

  backend:
    container_name: foodgram-backend
    build:
      context: ../backend
      dockerfile: Dockerfile
    volumes:
      - static_value:/app/static/
      - media_value:/app/media/
      - ../data:/app/data
    expose:
      - 8000
    depends_on:
      - db
    env_file: ./.env
    command: >
      bash -c "
        python manage.py collectstatic --noinput &&
        python manage.py makemigrations &&
        python manage.py migrate &&
        python manage.py load_ingredients &&
        gunicorn foodgram.wsgi:application --bind 0.0.0.0:8000
      "

  frontend:
    container_name: foodgram-front
    build: 
      context: ../frontend
      dockerfile: Dockerfile
    volumes:
      - ../frontend/:/app/result_build/

  nginx:
    container_name: foodgram-proxy
    image: nginx:1.25.4-alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ../frontend/build:/usr/share/nginx/html/
      - ../docs/:/usr/share/nginx/html/api/docs/
      - static_value:/var/html/static/
      - media_value:/var/html/media/
    depends_on:
      - backend
      - frontend
      
volumes:
  postgres_data:
  static_value:
  media_value:
